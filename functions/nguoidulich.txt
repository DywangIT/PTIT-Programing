#include <bits/stdc++.h>
using namespace std;

#define INF 1e9
int n;
vector<vector<int>> dist;
vector<vector<int>> dp;

int tsp(int mask, int pos) {
    if (mask == (1 << n) - 1) return dist[pos][0]; // Quay lại điểm ban đầu
    if (dp[mask][pos] != -1) return dp[mask][pos];

    int res = INF;
    for (int city = 0; city < n; city++) {
        if (!(mask & (1 << city))) { // Nếu chưa đi qua thành phố này
            res = min(res, dist[pos][city] + tsp(mask | (1 << city), city));
        }
    }
    return dp[mask][pos] = res;
}

int main() {
    cin >> n;
    dist.assign(n, vector<int>(n));
    dp.assign(1 << n, vector<int>(n, -1));

    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            cin >> dist[i][j];

    cout << tsp(1, 0); // Bắt đầu từ thành phố 0
    return 0;
}